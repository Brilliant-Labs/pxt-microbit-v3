{
    "AcceleratorRange.EightG": "El acelerómetro mide fuerzas de hasta 8 veces la gravedad",
    "AcceleratorRange.EightG|block": "8g",
    "AcceleratorRange.FourG": "El acelerómetro mide fuerzas de hasta 4 veces la gravedad",
    "AcceleratorRange.FourG|block": "4g",
    "AcceleratorRange.OneG": "El acelerómetro mide fuerzas de hasta 1 vez la gravedad",
    "AcceleratorRange.OneG|block": "1g",
    "AcceleratorRange.TwoG": "El acelerómetro mide fuerzas de hasta 2 veces la gravedad",
    "AcceleratorRange.TwoG|block": "2g",
    "Air_Quality_3.AirQuality.ccs811AirQuality|block": "Leer $this $valueToRetrieve valor",
    "Air_Quality_3.AirQuality.ccs811SetCalibration|block": "Calibrar $this sensor a temperatura de $cTemp $degrees y humedad $fHumid",
    "Air_Quality_3.AirQuality.readCCS811|block": "$this Leer $numBytes bytes desde register$register",
    "Air_Quality_3.AirQuality.writeCCS811|block": "Escribir $this arreglo $values en CCS811 register$register",
    "Air_Quality_3.createAirQuality|block": " $boardID $clickID",
    "Air_Quality_3.humidity.eightyfive|block": "85",
    "Air_Quality_3.humidity.eighty|block": "80",
    "Air_Quality_3.humidity.fifteen|block": "15",
    "Air_Quality_3.humidity.fiftyfive|block": "55",
    "Air_Quality_3.humidity.fifty|block": "50",
    "Air_Quality_3.humidity.five|block": "5",
    "Air_Quality_3.humidity.fourtyfive|block": "45",
    "Air_Quality_3.humidity.fourty|block": "40",
    "Air_Quality_3.humidity.hundred|block": "100",
    "Air_Quality_3.humidity.ninetyfive|block": "95",
    "Air_Quality_3.humidity.ninety|block": "90",
    "Air_Quality_3.humidity.seventyfive|block": "75",
    "Air_Quality_3.humidity.seventy|block": "70",
    "Air_Quality_3.humidity.sixety|block": "60",
    "Air_Quality_3.humidity.sixtyfive|block": "65",
    "Air_Quality_3.humidity.ten|block": "10",
    "Air_Quality_3.humidity.thirtyfive|block": "35",
    "Air_Quality_3.humidity.thirty|block": "30",
    "Air_Quality_3.humidity.twentyfive|block": "25",
    "Air_Quality_3.humidity.twenty|block": "20",
    "Air_Quality_3.temp_units.C|block": "C",
    "Air_Quality_3.temp_units.F|block": "F",
    "Air_Quality_3|block": "Air_Quality_3",
    "AnalogPin.P11|block": "P11 (solo escritura)",
    "AnalogPin.P12|block": "P12 (solo escritura)",
    "AnalogPin.P13|block": "P13 (solo escritura)",
    "AnalogPin.P14|block": "P14 (solo escritura)",
    "AnalogPin.P15|block": "P15 (solo escritura)",
    "AnalogPin.P16|block": "P16 (solo escritura)",
    "AnalogPin.P19|block": "P19 (solo escritura)",
    "AnalogPin.P20|block": "P20 (solo escritura)",
    "AnalogPin.P5|block": "P5 (solo escritura)",
    "AnalogPin.P6|block": "P6 (solo escritura)",
    "AnalogPin.P7|block": "P7 (solo escritura)",
    "AnalogPin.P8|block": "P8 (solo escritura)",
    "AnalogPin.P9|block": "P9 (solo escritura)",
    "Array._popStatement|block": "remover el ultimo valor desde %list",
    "Array._removeAtStatement|block": "%list| remover valor en %index",
    "Array._shiftStatement|block": "remover el primer valor desde %list",
    "Array._unshiftStatement|block": "%list| insertar %value| al inicio",
    "Array.indexOf|block": "%list| buscar indice de %value",
    "Array.insertAt|block": "%list| insertar en %index| valor %value",
    "Array.length|block": "longitud de %VALUE",
    "Array.pop|block": "obtener y remover el último valor desde %list",
    "Array.push|block": "%list| adicionar valor %value| al final",
    "Array.removeAt|block": "%list| obtener y remover valor en %index",
    "Array.reverse|block": "invertir %list",
    "Array.shift|block": "obtener y remover primer valor desde %list",
    "Array.unshift|block": "%list| insertar %value| al inicio",
    "Array|block": "Arreglo",
    "ArrowNames.East|block": "Este",
    "ArrowNames.NorthEast|block": "Noreste",
    "ArrowNames.NorthWest|block": "Noroccidente",
    "ArrowNames.North|block": "Norte",
    "ArrowNames.SouthEast|block": "Sureste",
    "ArrowNames.SouthWest|block": "Soroccidente",
    "ArrowNames.South|block": "Sur",
    "ArrowNames.West|block": "Occidentet",
    "BLiXel.blixel_index|block": "%index",
    "BLiXel.blixelsOff|block": "apagar todos los BLiXels",
    "BLiXel.colours|block": "%colour",
    "BLiXel.hsl|block": "matiz %h|saturation %s|luminosidad %l",
    "BLiXel.rgb|block": "rojo %red|verde %green|azul %blue",
    "BLiXel.setBrightness|block": "fijar brillo $brightness",
    "BLiXel.setPixelColour|block": "fijar BLiXel $pixeloffset=BLiXel_Index en $rgb=BLiXel_colours",
    "BLiXel.showBarGraph|block": "mostrar gráfico de barras BLiXel de la variable $value|con máximo valor $max ||mínimo valor $min",
    "BLiXel.showColour|block": "fijar todos los BLiXels en $rgb=BLiXel_colours",
    "BLiXel.show|block": "mostrar",
    "BLiXelIndex.five|block": "5",
    "BLiXelIndex.four|block": "4",
    "BLiXelIndex.one|block": "1",
    "BLiXelIndex.three|block": "3",
    "BLiXelIndex.two|block": "2",
    "BLiXelcolours.Black|block": "negro",
    "BLiXelcolours.Blue|block": "azul",
    "BLiXelcolours.Green|block": "verde",
    "BLiXelcolours.Indigo|block": "indigo",
    "BLiXelcolours.Orange|block": "narajna",
    "BLiXelcolours.Purple|block": "purpura",
    "BLiXelcolours.Red|block": "rojo",
    "BLiXelcolours.Violet|block": "violeta",
    "BLiXelcolours.White|block": "blanco",
    "BLiXelcolours.Yellow|block": "amarillo",
    "BLiXel|block": "BLiXel",
    "BUILT_IN_PERIPHERAL|block": "Expansion 20",
    "BaudRate.BaudRate115200|block": "115200",
    "BaudRate.BaudRate1200|block": "1200",
    "BaudRate.BaudRate14400|block": "14400",
    "BaudRate.BaudRate19200|block": "19200",
    "BaudRate.BaudRate2400|block": "2400",
    "BaudRate.BaudRate28800|block": "28800",
    "BaudRate.BaudRate31250|block": "31250",
    "BaudRate.BaudRate38400|block": "38400",
    "BaudRate.BaudRate4800|block": "4800",
    "BaudRate.BaudRate57600|block": "57600",
    "BaudRate.BaudRate9600|block": "9600",
    "BeatFraction.Breve|block": "4",
    "BeatFraction.Double|block": "2",
    "BeatFraction.Eighth|block": "1/8",
    "BeatFraction.Half|block": "1/2",
    "BeatFraction.Quarter|block": "1/4",
    "BeatFraction.Sixteenth|block": "1/16",
    "BeatFraction.Whole|block": "1",
    "BoardID.zero|block": "b.Board",
    "Buffer|block": "Buffer",
    "Button.AB|block": "A+B",
    "ButtonG.ButtonG.getSwitch|block": "$this Leer estado del boton",
    "ButtonG.ButtonG.onButtonState|block": "$this en estado $state",
    "ButtonG.ButtonG.setLightPWM|block": "$this Fijar luz del boton en $brightness brillo",
    "ButtonG.ButtonG.setLight|block": "$this Fijar luz del boton en $onOff",
    "ButtonG.createButtonG|block": "$boardID $clickID",
    "ButtonG|block": "ButtonG",
    "CO_2.CO.CO_Read_Concentration|block": "$this Obtener la lectura de concentración de CO en ppm (partes por millon)",
    "CO_2.createCO|block": " $boardID $clickID con $sensitivity nA/ppm",
    "CO_2|block": "CO_2",
    "ClickID.A|block": "Clickboard A",
    "ClickID.B|block": "Clickboard B",
    "Delimiters.CarriageReturn|block": "retorno de pagina (\r)",
    "Delimiters.Colon|block": ":",
    "Delimiters.Comma|block": ",",
    "Delimiters.Dollar|block": "$",
    "Delimiters.Fullstop|block": ".",
    "Delimiters.Hash|block": "#",
    "Delimiters.NewLine|block": "nueva linea (\n)",
    "Delimiters.Pipe|block": "|",
    "Delimiters.SemiColon|block": ";",
    "Delimiters.Space|block": "espacio",
    "Delimiters.Tab|block": "tab (\t)",
    "Dimension.Strength|block": "fuerza",
    "Dimension.X|block": "x",
    "Dimension.Y|block": "y",
    "Dimension.Z|block": "z",
    "Direction.Left|block": "izquierda",
    "Direction.Right|block": "derecha",
    "DisplayMode.BlackAndWhite|block": "blanco y negro",
    "DisplayMode.Greyscale|block": "escala de grises",
    "EventCreationMode.CreateAndFire": "MicroBitEvent inicializado, y sus manejadores de eventos se disparan inmediato (no adecuado para usar en interrupciones!).",
    "EventCreationMode.CreateOnly": "MicroBitEvent inicializado, y no ocurriran mas procesos.",
    "Force.Force.forceclick|block": "$this fuerza",
    "Force.createForceSettings|block": " $boardID $clickID",
    "Force|block": "Fuerza",
    "Gesture.EightG": "Raised when a 8G shock is detected",
    "Gesture.EightG|block": "8g",
    "Gesture.FreeFall": "Raised when the board is falling!",
    "Gesture.FreeFall|block": "free fall",
    "Gesture.LogoDown": "Raised when the logo is downward and the screen is vertical",
    "Gesture.LogoDown|block": "logo down",
    "Gesture.LogoUp": "Raised when the logo is upward and the screen is vertical",
    "Gesture.LogoUp|block": "logo up",
    "Gesture.ScreenDown": "Raised when the screen is pointing down and the board is horizontal",
    "Gesture.ScreenDown|block": "screen down",
    "Gesture.ScreenUp": "Raised when the screen is pointing up and the board is horizontal",
    "Gesture.ScreenUp|block": "screen up",
    "Gesture.Shake": "Raised when shaken",
    "Gesture.Shake|block": "shake",
    "Gesture.SixG": "Raised when a 6G shock is detected",
    "Gesture.SixG|block": "6g",
    "Gesture.ThreeG": "Raised when a 3G shock is detected",
    "Gesture.ThreeG|block": "3g",
    "Gesture.TiltLeft": "Raised when the screen is pointing left",
    "Gesture.TiltLeft|block": "tilt left",
    "Gesture.TiltRight": "Raised when the screen is pointing right",
    "Gesture.TiltRight|block": "tilt right",
    "IOPullDirection.one|block": "Pull Up",
    "IOPullDirection.three|block": "None",
    "IOPullDirection.two|block": "Pull Down",
    "IR_Break_Beam.IR_Break_Beam.onIRBreakBeam|block": "$this on $digitalPin $state",
    "IR_Break_Beam.createIR_Break_Beam|block": "$portID",
    "IR_Break_Beam|block": "IR_Break_Beam",
    "IR_Distance.IR_Distance.enable|block": "$this Turn $enable",
    "IR_Distance.IR_Distance.getDistance|block": "$this get distance",
    "IR_Distance.IR_Distance.getValue|block": "$this get value",
    "IR_Distance.createIR_Distance|block": "$boardID $clickID",
    "IR_Distance_GP2Y0A.IR_Distance_GP2Y0A.getDistance|block": "$this get distance",
    "IR_Distance_GP2Y0A.IR_Distance_GP2Y0A.getValue|block": "$this get value",
    "IR_Distance_GP2Y0A.createIR_Distance_GP2Y0A|block": "$portID range $sensorType",
    "IR_Distance_GP2Y0A|block": "IR_Distance_GP2Y0A",
    "IR_Distance|block": "IR_Distance",
    "IR_Sense_3.IR_Sense.isHumanDetected|block": "$this human detected?",
    "IR_Sense_3.IR_Sense.onHumanDetected|block": "$this on human detected",
    "IR_Sense_3.IR_Sense.readAK9754|block": "$this Read from register$register ?",
    "IR_Sense_3.IR_Sense.writeAK9754|block": "$this Write array $values to AK9754 register $register ?",
    "IR_Sense_3.createIR_Sense|block": " $boardID $clickID",
    "IR_Sense_3|block": "IR_Sense_3",
    "IconNames.Angry|block": "angry",
    "IconNames.Asleep|block": "asleep",
    "IconNames.Butterfly|block": "butterfly",
    "IconNames.Chessboard|block": "chess board",
    "IconNames.Confused|block": "confused",
    "IconNames.Cow|block": "cow",
    "IconNames.Diamond|block": "diamond",
    "IconNames.Duck|block": "duck",
    "IconNames.EigthNote|block": "eigth note",
    "IconNames.Fabulous|block": "fabulous",
    "IconNames.Ghost|block": "ghost",
    "IconNames.Giraffe|block": "giraffe",
    "IconNames.Happy|block": "happy",
    "IconNames.Heart|block": "heart",
    "IconNames.House|block": "house",
    "IconNames.LeftTriangle|block": "left triangle",
    "IconNames.Meh|block": "meh",
    "IconNames.No|block": "no",
    "IconNames.Pitchfork|block": "pitchfork",
    "IconNames.QuarterNote|block": "quarter note",
    "IconNames.Rabbit|block": "rabbit",
    "IconNames.Rollerskate|block": "roller skate",
    "IconNames.Sad|block": "sad",
    "IconNames.Scissors|block": "scissors",
    "IconNames.Silly|block": "silly",
    "IconNames.Skull|block": "skull",
    "IconNames.SmallDiamond|block": "small diamond",
    "IconNames.SmallHeart|block": "small heart",
    "IconNames.SmallSquare|block": "small square",
    "IconNames.Snake|block": "snake",
    "IconNames.Square|block": "square",
    "IconNames.StickFigure|block": "stick figure",
    "IconNames.Surprised|block": "surprised",
    "IconNames.Sword|block": "sword",
    "IconNames.TShirt|block": "t-shirt",
    "IconNames.Target|block": "target",
    "IconNames.Tortoise|block": "tortoise",
    "IconNames.Triangle|block": "triangle",
    "IconNames.Umbrella|block": "umbrella",
    "IconNames.Yes|block": "yes",
    "Image.scrollImage|block": "scroll image %sprite(myImage)|with offset %frameoffset|and interval (ms) %delay",
    "Image.showImage|block": "show image %sprite(myImage)|at offset %offset ||and interval (ms) %interval",
    "IrThermo_3.IrThermo_3.getObjectTemp|block": "$this surface temperature in $units",
    "IrThermo_3.TempUnits.C|block": "C",
    "IrThermo_3.TempUnits.F|block": "F",
    "IrThermo_3.createIrThermo|block": " $boardID $clickID",
    "IrThermo_3|block": "IrThermo_3",
    "JSON|block": "JSON",
    "Keylock.KeyPosition.one|block": "position 1",
    "Keylock.KeyPosition.three|block": "position 3",
    "Keylock.KeyPosition.two|block": "position 2",
    "Keylock.createkeylock|block": " $boardID $clickID",
    "Keylock.keylock.getLockPosition|block": "$this Get lock position",
    "Keylock.keylock.onMotionDetected|block": "$this on keylock $position",
    "Keylock|block": "Keylock",
    "LCD_Mini.LCDSettings.lcd_clearDisplay|block": "Clear $this LCD",
    "LCD_Mini.LCDSettings.lcd_writeString|block": "$this Write a $LCDstring to line $lineNum",
    "LCD_Mini.createLCDSettings|block": " $boardID $clickID",
    "LCD_Mini.lineNumber.one|block": "1",
    "LCD_Mini.lineNumber.two|block": "2",
    "LCD_Mini|block": "LCD_Mini",
    "LedSpriteProperty.Blink|block": "blink",
    "LedSpriteProperty.Brightness|block": "brightness",
    "LedSpriteProperty.Direction|block": "direction",
    "LedSpriteProperty.X|block": "x",
    "LedSpriteProperty.Y|block": "y",
    "Line_Follower.LineFollower.getBlackDirection|block": "$this black line following correction",
    "Line_Follower.LineFollower.getDirectionEnum|block": "$this $enumName",
    "Line_Follower.LineFollower.getWhiteDirection|block": "$this white line following correction",
    "Line_Follower.LineFollower.isReflected|block": "$this Has light been reflected on $sensorNum",
    "Line_Follower.createLineFollower|block": " $boardID $clickID",
    "Line_Follower|block": "Line_Follower",
    "Math.constrain|block": "constrain %value|between %low|and %high",
    "Math.map|block": "map %value|from low %fromLow|high %fromHigh|to low %toLow|high %toHigh",
    "Math.randomBoolean|block": "pick random true or false",
    "Math.randomRange|block": "pick random %min|to %limit",
    "Math|block": "Math",
    "Melodies.BaDing|block": "ba ding",
    "Melodies.Baddy|block": "baddy",
    "Melodies.Birthday|block": "birthday",
    "Melodies.Blues|block": "blues",
    "Melodies.Chase|block": "chase",
    "Melodies.Dadadadum|block": "dadadum",
    "Melodies.Entertainer|block": "entertainer",
    "Melodies.Funeral|block": "funeral",
    "Melodies.Funk|block": "funk",
    "Melodies.JumpDown|block": "jump down",
    "Melodies.JumpUp|block": "jump up",
    "Melodies.Nyan|block": "nyan",
    "Melodies.Ode|block": "ode",
    "Melodies.PowerDown|block": "power down",
    "Melodies.PowerUp|block": "power up",
    "Melodies.Prelude|block": "prelude",
    "Melodies.Punchline|block": "punchline",
    "Melodies.Ringtone|block": "ringtone",
    "Melodies.Wawawawaa|block": "wawawawaa",
    "Melodies.Wedding|block": "wedding",
    "MelodyOptions.ForeverInBackground|block": "forever in background",
    "MelodyOptions.Forever|block": "forever",
    "MelodyOptions.OnceInBackground|block": "once in background",
    "MelodyOptions.Once|block": "once",
    "MelodyStopOptions.All|block": "all",
    "MelodyStopOptions.Background|block": "background",
    "MelodyStopOptions.Foreground|block": "foreground",
    "MesDpadButtonInfo.ADown|block": "A down",
    "MesDpadButtonInfo.AUp|block": "A up",
    "MesDpadButtonInfo.BDown|block": "B down",
    "MesDpadButtonInfo.BUp|block": "B up",
    "MesDpadButtonInfo.CDown|block": "C down",
    "MesDpadButtonInfo.CUp|block": "C up",
    "MesDpadButtonInfo.DDown|block": "D down",
    "MesDpadButtonInfo.DUp|block": "D up",
    "MesDpadButtonInfo._1Down|block": "1 down",
    "MesDpadButtonInfo._1Up|block": "1 up",
    "MesDpadButtonInfo._2Down|block": "2 down",
    "MesDpadButtonInfo._2Up|block": "2 up",
    "MesDpadButtonInfo._3Down|block": "3 down",
    "MesDpadButtonInfo._3Up|block": "3 up",
    "MesDpadButtonInfo._4Down|block": "4 down",
    "MesDpadButtonInfo._4Up|block": "4 up",
    "Motion.Motion.isDetected|block": "$this Has motion been detected?",
    "Motion.Motion.motionEnable|block": "$this $enable motion",
    "Motion.Motion.onMotionDetected|block": "$this on motion detected",
    "Motion.createMotion|block": "$boardID $clickID",
    "Motion|block": "Motion",
    "MusicEvent.BackgroundMelodyEnded|block": "background melody ended",
    "MusicEvent.BackgroundMelodyNotePlayed|block": "background melody note played",
    "MusicEvent.BackgroundMelodyPaused|block": "background melody paused",
    "MusicEvent.BackgroundMelodyRepeated|block": "background melody repeated",
    "MusicEvent.BackgroundMelodyResumed|block": "background melody resumed",
    "MusicEvent.BackgroundMelodyStarted|block": "background melody started",
    "MusicEvent.MelodyEnded|block": "melody ended",
    "MusicEvent.MelodyNotePlayed|block": "melody note played",
    "MusicEvent.MelodyRepeated|block": "melody repeated",
    "MusicEvent.MelodyStarted|block": "melody started",
    "NFC_Tag_2.NFC_Tag_2.readNT3H2111|block": "$this Read $numBytes bytes from register$register",
    "NFC_Tag_2.NFC_Tag_2.setURI|block": "$this Write URL $URL to NFC device",
    "NFC_Tag_2.NFC_Tag_2.writeBlock|block": "$this Write array $values to block $blockAddr",
    "NFC_Tag_2.NFC_Tag_2.writeNT3H2111|block": "$this Write array $values to NT3H2111 register$register",
    "NFC_Tag_2.URICode.four|block": "https://",
    "NFC_Tag_2.URICode.one|block": "http://www.",
    "NFC_Tag_2.URICode.three|block": "http://",
    "NFC_Tag_2.URICode.two|block": "https://www.",
    "NFC_Tag_2.URICode.zero|block": "Full URL",
    "NFC_Tag_2.createNFC_Tag|block": " $boardID $clickID",
    "NFC_Tag_2|block": "NFC_Tag_2",
    "NO2.NO2.NO2_Read_Concentration|block": "Get $this NO2 concentration reading in ppm(parts per million)",
    "NO2.createNO2Settings|block": " $boardID $clickID with $sensitivity nA/ppm",
    "NO2|block": "NO2",
    "NeoPixelColors.Black|block": "black",
    "NeoPixelColors.Blue|block": "blue",
    "NeoPixelColors.Green|block": "green",
    "NeoPixelColors.Indigo|block": "indigo",
    "NeoPixelColors.Orange|block": "orange",
    "NeoPixelColors.Purple|block": "purple",
    "NeoPixelColors.Red|block": "red",
    "NeoPixelColors.Violet|block": "violet",
    "NeoPixelColors.White|block": "white",
    "NeoPixelColors.Yellow|block": "yellow",
    "NeoPixelMode.RGBW|block": "RGB+W",
    "NeoPixelMode.RGB_RGB|block": "RGB (RGB format)",
    "NeoPixelMode.RGB|block": "RGB (GRB format)",
    "Note.CSharp3|block": "C#3",
    "Note.CSharp4|block": "C#4",
    "Note.CSharp5|block": "C#5",
    "Note.CSharp|block": "C#",
    "Note.FSharp3|block": "F#3",
    "Note.FSharp4|block": "F#4",
    "Note.FSharp5|block": "F#5",
    "Note.FSharp|block": "F#",
    "Note.GSharp3|block": "G#3",
    "Note.GSharp4|block": "G#4",
    "Note.GSharp5|block": "G#5",
    "Note.GSharp|block": "G#",
    "Number|block": "Number",
    "ODCEnable.one|block": "Enable",
    "ODCEnable.zero|block": "Disable",
    "Object|block": "Object",
    "PinEvent.Fall|block": "fall",
    "PinEvent.PulseHigh|block": "pulse high",
    "PinEvent.PulseLow|block": "pulse low",
    "PinEvent.Rise|block": "rise",
    "PinEventType.Edge|block": "edge",
    "PinEventType.None|block": "none",
    "PinEventType.Pulse|block": "pulse",
    "PinEventType.Touch|block": "touch",
    "PinPullMode.PullDown|block": "down",
    "PinPullMode.PullNone|block": "none",
    "PinPullMode.PullUp|block": "up",
    "Proximity_2.Proximity_2.proximity_2_Read_Als|block": "$this illuminance(lux)",
    "Proximity_2.Proximity_2.proximity_2_Read_Proximity|block": "$this proximity",
    "Proximity_2.createProximity_2|block": " $boardID $clickID",
    "Proximity_2|block": "Proximity_2",
    "PulseValue.High|block": "high",
    "PulseValue.Low|block": "low",
    "Reed.Reed.getSwitch|block": "$this is magnet detected",
    "Reed.Reed.onMagnetDetected|block": "$this on magnet detected",
    "Reed.createReed|block": " $boardID $clickID",
    "Reed|block": "Reed",
    "Relay.Relay.relayOnOff|block": "$this turn $onOff relay $relayNum",
    "Relay.createRelay|block": "$boardID $clickID",
    "Relay|block": "Relay",
    "Rotation.Pitch|block": "pitch",
    "Rotation.Roll|block": "roll",
    "Servo.Servo.readPCA9685|block": "$this read from register%register",
    "Servo.Servo.setServoAngle|block": "$this set servo %n to %angle",
    "Servo.createServo|block": " $boardID $clickID",
    "Servo|block": "Servo",
    "SoundExpression.playUntilDone|block": "play sound $this until done",
    "SoundExpression.play|block": "play sound $this",
    "String.charAt|block": "char from %this=text|at %pos",
    "String.compare|block": "compare %this=text| to %that",
    "String.fromCharCode|block": "text from char code %code",
    "String.includes|block": "%this=text|includes %searchValue",
    "String.indexOf|block": "%this=text|find index of %searchValue",
    "String.isEmpty|block": "%this=text| is empty",
    "String.length|block": "length of %VALUE",
    "String.split|block": "split %this=text|at %separator",
    "String.substr|block": "substring of %this=text|from %start|of length %length",
    "String|block": "String",
    "Thermo_6.TempUnits.C|block": "C",
    "Thermo_6.TempUnits.F|block": "F",
    "Thermo_6.Thermo_6.getTemp|block": "$this Temperature in $units",
    "Thermo_6.Thermo_6.readMAX31875|block": "$this Read from register$register",
    "Thermo_6.Thermo_6.writeMAX31875|block": "$this Write $value to register $register",
    "Thermo_6.createThermo_6|block": " $boardID $clickID",
    "Thermo_6|block": "Thermo_6",
    "TouchButtonEvent.LongPressed|block": "long pressed",
    "TouchButtonEvent.Pressed|block": "pressed",
    "TouchButtonEvent.Released|block": "released",
    "TouchButtonEvent.Touched|block": "touched",
    "TouchTarget.LOGO|block": "logo",
    "TouchTarget.P0|block": "P0",
    "TouchTarget.P1|block": "P1",
    "TouchTarget.P2|block": "P2",
    "TouchTargetMode.Capacitive|block": "capacitive",
    "TouchTargetMode.Resistive|block": "resistive",
    "UV_3.UV_3.UVSteps|block": "$this UV Intensity",
    "UV_3.UV_3.disableShutdown|block": "$this Turn on device",
    "UV_3.UV_3.enableShutdown|block": "$this Turn off device",
    "UV_3.UV_3.readVEML6070|block": "$this Read from slave address $slaveAddress",
    "UV_3.UV_3.writeVEML6070|block": "$this Write $value to VEML6070 control register",
    "UV_3.createUV_3|block": " $boardID $clickID",
    "UV_3|block": "UV_3",
    "Water_Detect.Water_Detect.isWater|block": "$this Is water detected",
    "Water_Detect.Water_Detect.onWaterDectect|block": "$this on water detect",
    "Water_Detect.createWater_Detect|block": " $boardID $clickID",
    "Water_Detect|block": "Water_Detect",
    "Weather.Weather.Dewpoint|block": "$this Dewpoint $u",
    "Weather.Weather.Power|block": "$this Power $power",
    "Weather.Weather.humidity|block": "$this humidity",
    "Weather.Weather.pressure|block": "$this pressure $u",
    "Weather.Weather.temperature|block": "$this temperature $u",
    "Weather.Weather_P.Pa|block": "Pa",
    "Weather.Weather_P.hPa|block": "hPa",
    "Weather.Weather_P.kPa|block": "kPa",
    "Weather.Weather_P.mmHg|block": "mmHg",
    "Weather.Weather_P.psi|block": "psi",
    "Weather.Weather_T.T_C|block": "C",
    "Weather.Weather_T.T_F|block": "F",
    "Weather.createWeather|block": " $boardID $clickID",
    "Weather|block": "Weather",
    "_py|block": "_py",
    "bBoard_Control.I2CreadNoMem|block": "i2c read $numBytes bytes at i2c address $address on $boardID $clickID",
    "bBoard_Control.I2Cread|block": "i2c read $numBytes bytes |at memory address $memAddress |at i2c address $address on $boardID $clickID",
    "bBoard_Control.PWMFrequency|block": "set PWM frequency on pin $clickPin to $PWMfreq on $boardID $clickID",
    "bBoard_Control.SPIModeSelect|block": "spi set mode to $mode on $boardID $clickID",
    "bBoard_Control.SPIWriteArray|block": "spi write array $arrayValues on $boardID $clickID",
    "bBoard_Control.SPIWriteBuffer|block": "spi write buffer $bufferValues on $boardID $clickID",
    "bBoard_Control.SPIWrite|block": "spi write $value on $boardID $clickID",
    "bBoard_Control.SPIread|block": "spi read $numBytes bytes on $boardID $clickID",
    "bBoard_Control.UARTFrequency|block": "set UART baud to $baud on $boardID $clickID",
    "bBoard_Control.UARTSendBuffer|block": "send buffer $buff on $boardID $clickID",
    "bBoard_Control.UARTSendString|block": "send string $UARTString on $boardID $clickID",
    "bBoard_Control.analogRead|block": "analog read pin %clickPin on $boardID $clickID",
    "bBoard_Control.digitalReadPin|block": "digital read pin $clickPin on $boardID $clickID",
    "bBoard_Control.getClickEventMask|block": "Get click event mask",
    "bBoard_Control.getFirmwareVersion|block": "Get firmware version of $boardID at slot $clickID on $boardID $clickID",
    "bBoard_Control.getInterruptSource|block": "Get Interrupt source on $boardID $clickID",
    "bBoard_Control.getUARTData|block": "read string on $boardID $clickID",
    "bBoard_Control.i2cWriteNumber|block": "i2c write number $value|to i2c address $address|of format $format | repeated $repeated on $boardID $clickID",
    "bBoard_Control.isUARTDataAvailable|block": "is UART data available on $boardID $clickID?",
    "bBoard_Control.setDuty|block": "set duty cycle on pin $clickPin to $duty on $boardID $clickID",
    "bBoard_Control.setIODirection|block": "set pin $clickPin to $direction on $boardID $clickID",
    "bBoard_Control.setOpenDrain|block": "$ODC_Enable open drain on $clickPin on $boardID $clickID",
    "bBoard_Control.setPullDirection|block": "set pin $clickPin to $pullDirection on $boardID $clickID",
    "bBoard_Control.spiCS|block": "spi assign CS Pin to pin $clickPin on $boardID $clickID",
    "bBoard_Control.spiFrequency|block": "spi set frequency $frequency on $boardID $clickID",
    "bBoard_Control.writePin|block": "write pin $clickPin to $value on $boardID $clickID",
    "bBoard_Control|block": "bBoard_Control",
    "bBoard_Mic.clearThresholdFlag|block": "clear threshold flag",
    "bBoard_Mic.micBaseline|block": "update microphone baseline",
    "bBoard_Mic.micEnable|block": "microphone $enable",
    "bBoard_Mic.micSoundLevel|block": "get sound level",
    "bBoard_Mic.micThresholdFlag|block": "has threshold been reached?",
    "bBoard_Mic.onMicThresh|block": "on $soundLevel sound",
    "bBoard_Mic.setThresholdLevel|block": "set mic threshold level to %threshold",
    "bBoard_Motor.motorEnable|block": "motor driver %enable",
    "bBoard_Motor.motorLeftDuty|block": "set left motor speed to$duty \\%",
    "bBoard_Motor.motorLeftTimed|block": "set left motor speed to$duty \\% for$waitTime (ms)",
    "bBoard_Motor.motorRightDuty|block": "set right motor speed to$duty \\%",
    "bBoard_Motor.motorRightTimed|block": "set right motor speed to$duty \\% for$waitTime (ms)",
    "bBoard_Motor.motorTimed|block": "set both motors speed to$duty \\% for$waitTime (ms)",
    "bBoard_Motor|block": "bBoard_Motor",
    "bBoard_Sound.playFrequency|block": "play frequencies $frequencies Hz",
    "bBoard_Sound.setFrequenciesBPM|block": "set frequencies tempo to (bpm)%BPM",
    "bBoard_WiFi.Command.Add_Data|block": "Add Feed Data",
    "bBoard_WiFi.Command.Create_Feed|block": "Create Feed",
    "bBoard_WiFi.Command.Delete_Feed_Data|block": "Delete Data",
    "bBoard_WiFi.Command.Delete_Feed|block": "Delete Feed",
    "bBoard_WiFi.Command.Get_Feed_Data|block": "Get Feed Data",
    "bBoard_WiFi.WifiConnect|block": "connect to ssid $ssid| with password $pwd",
    "bBoard_WiFi.connectBLMQTT|block": "|BL MQTT connect",
    "bBoard_WiFi.onBLMQTT|block": " on BL Cloud MQTT message received $receivedData from feed $feedName",
    "bBoard_WiFi.publishBLMQTT|block": "BL MQTT publish$data to feed$feedName and project key $topic",
    "bBoard_WiFi.subscribeBLMQTT|block": "| BL MQTT subscribe to project key $topic",
    "bBoard_WiFi|block": "bBoard_WiFi",
    "basic.clearScreen|block": "clear screen",
    "basic.forever|block": "forever",
    "basic.pause|block": "pause (ms) %pause",
    "basic.showArrow|block": "show arrow %i=device_arrow",
    "basic.showIcon|block": "show icon %i",
    "basic.showLeds|block": "show leds",
    "basic.showNumber|block": "show|number %number",
    "basic.showString|block": "show|string %text",
    "basic|block": "basic",
    "console|block": "console",
    "control.deviceName|block": "device name",
    "control.deviceSerialNumber|block": "device serial number",
    "control.eventSourceId|block": "%id",
    "control.eventTimestamp|block": "event timestamp",
    "control.eventValueId|block": "%id",
    "control.eventValue|block": "event value",
    "control.inBackground|block": "run in background",
    "control.millis|block": "millis (ms)",
    "control.onEvent|block": "on event|from %src=control_event_source_id|with value %value=control_event_value_id",
    "control.raiseEvent|block": "raise event|from source %src=control_event_source_id|with value %value=control_event_value_id",
    "control.reset|block": "reset",
    "control.waitForEvent|block": "wait for event|from %src|with value %value",
    "control.waitMicros|block": "wait (µs)%micros",
    "control|block": "control",
    "convertToText|block": "convert $value=math_number to text",
    "game.LedSprite.change|block": "%sprite|change %property|by %value",
    "game.LedSprite.delete|block": "delete %this(sprite)",
    "game.LedSprite.get|block": "%sprite|%property",
    "game.LedSprite.ifOnEdgeBounce|block": "%sprite|if on edge, bounce",
    "game.LedSprite.isDeleted|block": "is %sprite|deleted",
    "game.LedSprite.isTouchingEdge|block": "is %sprite|touching edge",
    "game.LedSprite.isTouching|block": "is %sprite|touching %other",
    "game.LedSprite.move|block": "%sprite|move by %leds",
    "game.LedSprite.set|block": "%sprite|set %property|to %value",
    "game.LedSprite.turn|block": "%sprite|turn %direction|by (°) %degrees",
    "game.addLife|block": "add life %lives",
    "game.addScore|block": "change score by|%points",
    "game.createSprite|block": "create sprite at|x: %x|y: %y",
    "game.gameOver|block": "game over",
    "game.isGameOver|block": "is game over",
    "game.isPaused|block": "is paused",
    "game.isRunning|block": "is running",
    "game.pause|block": "pause",
    "game.removeLife|block": "remove life %life",
    "game.resume|block": "resume",
    "game.score|block": "score",
    "game.setLife|block": "set life %value",
    "game.setScore|block": "set score %points",
    "game.startCountdown|block": "start countdown|(ms) %duration",
    "game|block": "game",
    "images.arrowImage|block": "arrow image %i",
    "images.arrowNumber|block": "%arrow",
    "images.createBigImage|block": "create big image",
    "images.createImage|block": "create image",
    "images.iconImage|block": "icon image %i",
    "images|block": "images",
    "input.acceleration|block": "acceleration (mg)|%NAME",
    "input.buttonIsPressed|block": "button|%NAME|is pressed",
    "input.calibrateCompass|block": "calibrate compass",
    "input.compassHeading|block": "compass heading (°)",
    "input.isGesture|block": "is %gesture gesture",
    "input.lightLevel|block": "light level",
    "input.logoIsPressed|block": "logo is pressed",
    "input.magneticForce|block": "magnetic force (µT)|%NAME",
    "input.onButtonPressed|block": "on button|%NAME|pressed",
    "input.onGesture|block": "on |%NAME",
    "input.onLogoEvent|block": "on logo $action",
    "input.onPinPressed|block": "on pin %name|pressed",
    "input.onPinReleased|block": "on pin %NAME|released",
    "input.pinIsPressed|block": "pin %NAME|is pressed",
    "input.rotation|block": "rotation (°)|%NAME",
    "input.runningTimeMicros|block": "running time (micros)",
    "input.runningTime|block": "running time (ms)",
    "input.setAccelerometerRange|block": "set accelerometer|range %range",
    "input.temperature|block": "temperature (°C)",
    "input|block": "input",
    "led.brightness|block": "brightness",
    "led.enable|block": "led enable %on",
    "led.plotBarGraph|block": "plot bar graph of %value up to %high",
    "led.plotBrightness|block": "plot|x %x|y %y|brightness %brightness",
    "led.plot|block": "plot|x %x|y %y",
    "led.pointBrightness|block": "point|x %x|y %y brightness",
    "led.point|block": "point|x %x|y %y",
    "led.setBrightness|block": "set brightness %value",
    "led.setDisplayMode|block": "set display mode $mode",
    "led.stopAnimation|block": "stop animation",
    "led.toggle|block": "toggle|x %x|y %y",
    "led.unplot|block": "unplot|x %x|y %y",
    "led|block": "led",
    "light|block": "light",
    "msgpack|block": "msgpack",
    "music.beat|block": "%fraction|beat",
    "music.builtInMelody|block": "%melody",
    "music.changeTempoBy|block": "change tempo by (bpm)|%value",
    "music.melodyEditor|block": "$melody",
    "music.noteFrequency|block": "%name",
    "music.onEvent|block": "music on %value",
    "music.playMelody|block": "play melody $melody at tempo $tempo|(bpm)",
    "music.playTone|block": "play|tone %note=device_note|for %duration=device_beat",
    "music.rest|block": "rest(ms)|%duration=device_beat",
    "music.ringTone|block": "ring tone (Hz)|%note=device_note",
    "music.setBuiltInSpeakerEnabled|block": "set built-in speaker $enabled",
    "music.setTempo|block": "set tempo to (bpm)|%value",
    "music.setVolume|block": "set volume %volume",
    "music.startMelody|block": "start melody %melody=device_builtin_melody| repeating %options",
    "music.stopAllSounds|block": "stop all sounds",
    "music.stopMelody|block": "stop melody $options",
    "music.tempo|block": "tempo (bpm)",
    "music.volume|block": "volume",
    "music|block": "music",
    "neopixel.Strip.clear|block": "%strip|clear",
    "neopixel.Strip.easeBrightness|block": "%strip|ease brightness",
    "neopixel.Strip.length|block": "%strip|length",
    "neopixel.Strip.power|block": "%strip|power (mA)",
    "neopixel.Strip.range|block": "%strip|range from %start|with %length|leds",
    "neopixel.Strip.rotate|block": "%strip|rotate pixels by %offset",
    "neopixel.Strip.setBrightness|block": "%strip|set brightness %brightness",
    "neopixel.Strip.setMatrixColor|block": "%strip|set matrix color at x %x|y %y|to %rgb=neopixel_colors",
    "neopixel.Strip.setMatrixWidth|block": "%strip|set matrix width %width",
    "neopixel.Strip.setPixelColor|block": "%strip|set pixel color at %pixeloffset|to %rgb=neopixel_colors",
    "neopixel.Strip.setPixelWhiteLED|block": "%strip|set pixel white LED at %pixeloffset|to %white",
    "neopixel.Strip.shift|block": "%strip|shift pixels by %offset",
    "neopixel.Strip.showBarGraph|block": "%strip|show bar graph of %value|up to %high",
    "neopixel.Strip.showColor|block": "%strip|show color %rgb=neopixel_colors",
    "neopixel.Strip.showRainbow|block": "%strip|show rainbow from %startHue|to %endHue",
    "neopixel.Strip.show|block": "%strip|show",
    "neopixel.colors|block": "%color",
    "neopixel.create|block": "NeoPixel at pin %pin|with %numleds|leds as %mode",
    "neopixel.hsl|block": "hue %h|saturation %s|luminosity %l",
    "neopixel.rgb|block": "red %red|green %green|blue %blue",
    "neopixel|block": "neopixel",
    "parseFloat|block": "parse to number %text",
    "parseInt|block": "parse to integer %text",
    "pins.analogPitchVolume|block": "analog pitch volume",
    "pins.analogPitch|block": "analog pitch %frequency|for (ms) %ms",
    "pins.analogReadPin|block": "analog read|pin %name",
    "pins.analogSetPeriod|block": "analog set period|pin %pin|to (µs)%micros",
    "pins.analogSetPitchPin|block": "analog set pitch pin %name",
    "pins.analogSetPitchVolume|block": "analog set pitch volume $volume",
    "pins.analogWritePin|block": "analog write|pin %name|to %value",
    "pins.digitalReadPin|block": "digital read|pin %name",
    "pins.digitalWritePin|block": "digital write|pin %name|to %value",
    "pins.i2cReadNumber|block": "i2c read number|at address %address|of format %format|repeated %repeat",
    "pins.i2cWriteNumber|block": "i2c write number|at address %address|with value %value|of format %format|repeated %repeat",
    "pins.map|block": "map %value|from low %fromLow|from high %fromHigh|to low %toLow|to high %toHigh",
    "pins.onPulsed|block": "on|pin %pin|pulsed %pulse",
    "pins.pulseDuration|block": "pulse duration (µs)",
    "pins.pulseIn|block": "pulse in (µs)|pin %name|pulsed %value",
    "pins.servoSetPulse|block": "servo set pulse|pin %value|to (µs) %micros",
    "pins.servoWritePin|block": "servo write|pin %name|to %value",
    "pins.setAudioPin|block": "set audio pin $name",
    "pins.setEvents|block": "set pin %pin|to emit %type|events",
    "pins.setPull|block": "set pull|pin %pin|to %pull",
    "pins.spiFormat|block": "spi format|bits %bits|mode %mode",
    "pins.spiFrequency|block": "spi frequency %frequency",
    "pins.spiPins|block": "spi set pins|MOSI %mosi|MISO %miso|SCK %sck",
    "pins.spiWrite|block": "spi write %value",
    "pins.touchSetMode|block": "set %name to touch mode %mode",
    "pins|block": "pins",
    "randint|block": "pick random %min|to %limit",
    "serial.delimiters|block": "%del",
    "serial.onDataReceived|block": "serial|on data received %delimiters=serial_delimiter_conv",
    "serial.readBuffer|block": "serial|read buffer %length",
    "serial.readLine|block": "serial|read line",
    "serial.readString|block": "serial|read string",
    "serial.readUntil|block": "serial|read until %delimiter=serial_delimiter_conv",
    "serial.redirectToUSB|block": "serial|redirect to USB",
    "serial.redirect|block": "serial|redirect to|TX %tx|RX %rx|at baud rate %rate",
    "serial.setBaudRate|block": "serial|set baud rate %rate",
    "serial.setRxBufferSize|block": "serial set rx buffer size to $size",
    "serial.setTxBufferSize|block": "serial set tx buffer size to $size",
    "serial.setWriteLinePadding|block": "serial set write line padding to $length",
    "serial.writeBuffer|block": "serial|write buffer %buffer=serial_readbuffer",
    "serial.writeLine|block": "serial|write line %text",
    "serial.writeNumbers|block": "serial|write numbers %values",
    "serial.writeNumber|block": "serial|write number %value",
    "serial.writeString|block": "serial|write string %text",
    "serial.writeValue|block": "serial|write value %name|= %value",
    "serial|block": "serial",
    "soundExpression.giggle|block": "{id:soundexpression}giggle",
    "soundExpression.happy|block": "{id:soundexpression}happy",
    "soundExpression.hello|block": "{id:soundexpression}hello",
    "soundExpression.mysterious|block": "{id:soundexpression}mysterious",
    "soundExpression.sad|block": "{id:soundexpression}sad",
    "soundExpression.slide|block": "{id:soundexpression}slide",
    "soundExpression.soaring|block": "{id:soundexpression}soaring",
    "soundExpression.spring|block": "{id:soundexpression}spring",
    "soundExpression.twinkle|block": "{id:soundexpression}twinkle",
    "soundExpression.yawn|block": "{id:soundexpression}yawn",
    "{id:category}Air_Quality_3": "Air_Quality_3",
    "{id:category}AnalogInPin": "AnalogInPin",
    "{id:category}AnalogOutPin": "AnalogOutPin",
    "{id:category}Array": "Array",
    "{id:category}Arrays": "Arrays",
    "{id:category}BBoard_Control": "BBoard_Control",
    "{id:category}BBoard_Mic": "BBoard_Mic",
    "{id:category}BBoard_Motor": "BBoard_Motor",
    "{id:category}BBoard_Sound": "BBoard_Sound",
    "{id:category}BBoard_WiFi": "BBoard_WiFi",
    "{id:category}BLiXel": "BLiXel",
    "{id:category}Basic": "Basic",
    "{id:category}Boolean": "Boolean",
    "{id:category}Buffer": "Buffer",
    "{id:category}ButtonG": "ButtonG",
    "{id:category}CO_2": "CO_2",
    "{id:category}Console": "Console",
    "{id:category}Control": "Control",
    "{id:category}DigitalInOutPin": "DigitalInOutPin",
    "{id:category}Force": "Force",
    "{id:category}Fx": "Fx",
    "{id:category}Fx8": "Fx8",
    "{id:category}Game": "Game",
    "{id:category}Helpers": "Helpers",
    "{id:category}IR_Break_Beam": "IR_Break_Beam",
    "{id:category}IR_Distance": "IR_Distance",
    "{id:category}IR_Distance_GP2Y0A": "IR_Distance_GP2Y0A",
    "{id:category}IR_Sense_3": "IR_Sense_3",
    "{id:category}Image": "Image",
    "{id:category}Images": "Images",
    "{id:category}Input": "Input",
    "{id:category}IrThermo_3": "IrThermo_3",
    "{id:category}JSON": "JSON",
    "{id:category}Keylock": "Keylock",
    "{id:category}LCD_Mini": "LCD_Mini",
    "{id:category}Led": "Led",
    "{id:category}Light": "Light",
    "{id:category}Line_Follower": "Line_Follower",
    "{id:category}Math": "Math",
    "{id:category}MicrobitPin": "MicrobitPin",
    "{id:category}Motion": "Motion",
    "{id:category}Msgpack": "Msgpack",
    "{id:category}Music": "Music",
    "{id:category}NFC_Tag_2": "NFC_Tag_2",
    "{id:category}NO2": "NO2",
    "{id:category}Neopixel": "Neopixel",
    "{id:category}Number": "Number",
    "{id:category}Object": "Object",
    "{id:category}Pins": "Pins",
    "{id:category}Proximity_2": "Proximity_2",
    "{id:category}PwmOnlyPin": "PwmOnlyPin",
    "{id:category}Reed": "Reed",
    "{id:category}Relay": "Relay",
    "{id:category}Serial": "Serial",
    "{id:category}Servo": "Servo",
    "{id:category}SoundExpression": "SoundExpression",
    "{id:category}String": "String",
    "{id:category}Text": "Text",
    "{id:category}Thermo_6": "Thermo_6",
    "{id:category}UV_3": "UV_3",
    "{id:category}Water_Detect": "Water_Detect",
    "{id:category}Weather": "Weather",
    "{id:category}Ws2812b": "Ws2812b",
    "{id:category}_py": "_py",
    "{id:group}Configuration": "Configuration",
    "{id:group}Dewpoint": "Dewpoint",
    "{id:group}Humidity": "Humidity",
    "{id:group}I2C": "I2C",
    "{id:group}Initialize and Connect": "Initialize and Connect",
    "{id:group}MQTT": "MQTT",
    "{id:group}Melody": "Melody",
    "{id:group}Melody Advanced": "Melody Advanced",
    "{id:group}Modify": "Modify",
    "{id:group}Operations": "Operations",
    "{id:group}PWM": "PWM",
    "{id:group}Pins": "Pins",
    "{id:group}Power": "Power",
    "{id:group}Pressure": "Pressure",
    "{id:group}Read": "Read",
    "{id:group}SPI": "SPI",
    "{id:group}Temperature": "Temperature",
    "{id:group}Tempo": "Tempo",
    "{id:group}Tone": "Tone",
    "{id:group}UART": "UART",
    "{id:group}Volume": "Volume",
    "{id:group}_____________": "_____________",
    "{id:group}micro:bit (V2)": "micro:bit (V2)",
    "{id:subcategory}Brilliant Labs Cloud": "Brilliant Labs Cloud"
  }
  