{
  "AcceleratorRange.EightG": "L'accélérateur mesure des forces jusqu’à une milli-grativité de 8",
  "AcceleratorRange.EightG|block": "8g",
  "AcceleratorRange.FourG": "L'accélérateur mesure des forces jusqu’à une milli-grativité de 4",
  "AcceleratorRange.FourG|block": "4g",
  "AcceleratorRange.OneG": "L'accélérateur mesure des forces jusqu’à une milli-grativité de 1",
  "AcceleratorRange.OneG|block": "1g",
  "AcceleratorRange.TwoG": "L'accélérateur mesure des forces jusqu’à une milli-grativité de 2",
  "AcceleratorRange.TwoG|block": "2g",
  "Air_Quality_3.AirQuality.ccs811AirQuality|block": "Lire $this $valueToRetrieve valeur",
  "Air_Quality_3.AirQuality.ccs811SetCalibration|block": "Calibrerzzzzz $this capteur à la température $cTemp $degrees et humidité $fHumid",
  "Air_Quality_3.AirQuality.readCCS811|block": "$this Lire $numBytes bytes du registre$register",
  "Air_Quality_3.AirQuality.writeCCS811|block": "Écrire $this tableau $values à CCS811 inscrire$register",
  "Air_Quality_3.createAirQuality|block": " $boardID $clickID",
  "Air_Quality_3.humidity.eightyfive|block": "85",
  "Air_Quality_3.humidity.eighty|block": "80",
  "Air_Quality_3.humidity.fifteen|block": "15",
  "Air_Quality_3.humidity.fiftyfive|block": "55",
  "Air_Quality_3.humidity.fifty|block": "50",
  "Air_Quality_3.humidity.five|block": "5",
  "Air_Quality_3.humidity.fourtyfive|block": "45",
  "Air_Quality_3.humidity.fourty|block": "40",
  "Air_Quality_3.humidity.hundred|block": "100",
  "Air_Quality_3.humidity.ninetyfive|block": "95",
  "Air_Quality_3.humidity.ninety|block": "90",
  "Air_Quality_3.humidity.seventyfive|block": "75",
  "Air_Quality_3.humidity.seventy|block": "70",
  "Air_Quality_3.humidity.sixety|block": "60",
  "Air_Quality_3.humidity.sixtyfive|block": "65",
  "Air_Quality_3.humidity.ten|block": "10",
  "Air_Quality_3.humidity.thirtyfive|block": "35",
  "Air_Quality_3.humidity.thirty|block": "30",
  "Air_Quality_3.humidity.twentyfive|block": "25",
  "Air_Quality_3.humidity.twenty|block": "20",
  "Air_Quality_3.temp_units.C|block": "C",
  "Air_Quality_3.temp_units.F|block": "F",
  "Air_Quality_3|block": "Air_Quality_3",

  "AnalogPin.P11|block": "P11 (écrire seulement)",
  "AnalogPin.P12|block": "P12 (écrire seulement)",
  "AnalogPin.P13|block": "P13 (écrire seulement)",
  "AnalogPin.P14|block": "P14 (écrire seulement)",
  "AnalogPin.P15|block": "P15 (écrire seulement)",
  "AnalogPin.P16|block": "P16 (écrire seulement)",
  "AnalogPin.P19|block": "P19 (écrire seulement)",
  "AnalogPin.P20|block": "P20 (écrire seulement)",
  "AnalogPin.P5|block": "P5 (écrire seulement)",
  "AnalogPin.P6|block": "P6 (écrire seulement)",
  "AnalogPin.P7|block": "P7 (écrire seulement)",
  "AnalogPin.P8|block": "P8 (écrire seulement)",
  "AnalogPin.P9|block": "P9 (écrire seulement)",

  "Array._popStatement|block": "remove last value from %list",
  "Array._removeAtStatement|block": "%list| remove value at %index",
  "Array._shiftStatement|block": "remove first value from %list",
  "Array._unshiftStatement|block": "%list| insert %value| at beginning",
  "Array.indexOf|block": "%list| trouver l'index de %value",
  "Array.insertAt|block": "%list| insérer l' %index| valeur %value",
  "Array.length|block": "longueur de %VALUE",
  "Array.pop|block": "cherche et enlève la dernière valeure de la liste %list",
  "Array.push|block": "%list| ajoute la valeure %value| à la fin",
  "Array.removeAt|block": "%list| enlève la valeure à l' %index",
  "Array.reverse|block": "inverse %list",
  "Array.shift|block": "cherche et enlève la première valeure de la liste %list",
  "Array.unshift|block": "%list| insérer %value| au début",
  "Array|block": "Liste",
  "ArrowNames.East|block": "Est",
  "ArrowNames.NorthEast|block": "Nord Est",
  "ArrowNames.NorthWest|block": "Nord Ouest",
  "ArrowNames.North|block": "Nord",
  "ArrowNames.SouthEast|block": "Sud Est",
  "ArrowNames.SouthWest|block": "Sud Ouest",
  "ArrowNames.South|block": "Sud",
  "ArrowNames.West|block": "Ouest",

  "BLiXel.blixel_index|block": "%index",
  "BLiXel.blixelsOff|block": "fermer tous les BLiXels",
  "BLiXel.colours|block": "%colour",
  "BLiXel.hsl|block": "nuance %h|saturation %s|luminosité %l",
  "BLiXel.rgb|block": "rouge %red|vert %green|bleu %blue",
  "BLiXel.setBrightness|block": "définir la luminosité $brightness",
  "BLiXel.setPixelColour|block": "définir BLiXel $pixeloffset=BLiXel_Index to $rgb=BLiXel_colours",
  "BLiXel.showBarGraph|block": "montrer BLiXel diagramme à barres de la variable $value|avec valeur max $max ||valeur min $min",
  "BLiXel.showColour|block": "définir tous BLiXels à $rgb=BLiXel_colours",
  "BLiXel.show|block": "montrer",
  "BLiXelIndex.five|block": "5",
  "BLiXelIndex.four|block": "4",
  "BLiXelIndex.one|block": "1",
  "BLiXelIndex.three|block": "3",
  "BLiXelIndex.two|block": "2",
  "BLiXelcolours.Black|block": "noir",
  "BLiXelcolours.Blue|block": "bleu",
  "BLiXelcolours.Green|block": "vert",
  "BLiXelcolours.Indigo|block": "indigo",
  "BLiXelcolours.Orange|block": "orange",
  "BLiXelcolours.Purple|block": "mauve",
  "BLiXelcolours.Red|block": "rouge",
  "BLiXelcolours.Violet|block": "violet",
  "BLiXelcolours.White|block": "blanc",
  "BLiXelcolours.Yellow|block": "jaune",
  "BLiXel|block": "BLiXel",

  "BUILT_IN_PERIPHERAL|block": "Expansion 20",
  "BaudRate.BaudRate115200|block": "115200",
  "BaudRate.BaudRate1200|block": "1200",
  "BaudRate.BaudRate14400|block": "14400",
  "BaudRate.BaudRate19200|block": "19200",
  "BaudRate.BaudRate2400|block": "2400",
  "BaudRate.BaudRate28800|block": "28800",
  "BaudRate.BaudRate31250|block": "31250",
  "BaudRate.BaudRate38400|block": "38400",
  "BaudRate.BaudRate4800|block": "4800",
  "BaudRate.BaudRate57600|block": "57600",
  "BaudRate.BaudRate9600|block": "9600",
  "BeatFraction.Breve|block": "4",
  "BeatFraction.Double|block": "2",
  "BeatFraction.Eighth|block": "1/8",
  "BeatFraction.Half|block": "1/2",
  "BeatFraction.Quarter|block": "1/4",
  "BeatFraction.Sixteenth|block": "1/16",
  "BeatFraction.Whole|block": "1",
  "BoardID.zero|block": "b.Board",
  "Buffer|block": "Buffer",
  "Button.AB|block": "A+B",

  "ButtonG.ButtonG.getSwitch|block": "$this Lire l'état du bouton",
  "ButtonG.ButtonG.onButtonState|block": "$this sur le bouton $state",
  "ButtonG.ButtonG.setLightPWM|block": "$this Définir la lumière du bouton à $brightness de luminosité",
  "ButtonG.ButtonG.setLight|block": "$this Définir la lumière du bouton $onOff",
  "ButtonG.createButtonG|block": "$boardID $clickID",
  "ButtonG|block": "ButtonG",

  "CO_2.CO.CO_Read_Concentration|block": "Obtenir $this la concentration de CO en ppm (parties par million)",
  "CO_2.createCO|block": " $boardID $clickID avec $sensitivity nA/ppm",
  "CO_2|block": "CO_2",

  "ClickID.A|block": "Clickboard A",
  "ClickID.B|block": "Clickboard B",
  "Delimiters.CarriageReturn|block": "retour à la ligne(\r)",
  "Delimiters.Colon|block": ":",
  "Delimiters.Comma|block": ",",
  "Delimiters.Dollar|block": "$",
  "Delimiters.Fullstop|block": ".",
  "Delimiters.Hash|block": "#",
  "Delimiters.NewLine|block": "nouvelle ligne (\n)",
  "Delimiters.Pipe|block": "|",
  "Delimiters.SemiColon|block": ";",
  "Delimiters.Space|block": "espace",
  "Delimiters.Tab|block": "onglet (\t)",
  "Dimension.Strength|block": "force",
  "Dimension.X|block": "x",
  "Dimension.Y|block": "y",
  "Dimension.Z|block": "z",
  "Direction.Left|block": "gauche",
  "Direction.Right|block": "droite",
  "DisplayMode.BlackAndWhite|block": "noir et blanc",
  "DisplayMode.Greyscale|block": "gris",
  "EventCreationMode.CreateAndFire": "MicroBitEvent is initialised, and its event handlers are immediately fired (not suitable for use in interrupts!).",
  "EventCreationMode.CreateOnly": "MicroBitEvent is initialised, and no further processing takes place.",
  
  "Force.Force.forceclick|block": "$this force",
  "Force.createForceSettings|block": " $boardID $clickID",
  "Force|block": "Force",

  "Gesture.EightG": "Raised when a 8G shock is detected",
  "Gesture.EightG|block": "8g",
  "Gesture.FreeFall": "Raised when the board is falling!",
  "Gesture.FreeFall|block": "free fall",
  "Gesture.LogoDown": "Raised when the logo is downward and the screen is vertical",
  "Gesture.LogoDown|block": "logo down",
  "Gesture.LogoUp": "Raised when the logo is upward and the screen is vertical",
  "Gesture.LogoUp|block": "logo up",
  "Gesture.ScreenDown": "Raised when the screen is pointing up and the board is horizontal",
  "Gesture.ScreenDown|block": "screen down",
  "Gesture.ScreenUp": "Raised when the screen is pointing down and the board is horizontal",
  "Gesture.ScreenUp|block": "screen up",
  "Gesture.Shake": "Raised when shaken",
  "Gesture.Shake|block": "shake",
  "Gesture.SixG": "Raised when a 6G shock is detected",
  "Gesture.SixG|block": "6g",
  "Gesture.ThreeG": "Raised when a 3G shock is detected",
  "Gesture.ThreeG|block": "3g",
  "Gesture.TiltLeft": "Raised when the screen is pointing left",
  "Gesture.TiltLeft|block": "tilt left",
  "Gesture.TiltRight": "Raised when the screen is pointing right",
  "Gesture.TiltRight|block": "tilt right",
  "IOPullDirection.one|block": "Pull Up",
  "IOPullDirection.three|block": "None",
  "IOPullDirection.two|block": "Pull Down",

  "IR_Break_Beam.IR_Break_Beam.onIRBreakBeam|block": "$this à $digitalPin $state",
  "IR_Break_Beam.createIR_Break_Beam|block": "$portID",
  "IR_Break_Beam|block": "IR_Break_Beam",

  "IR_Distance.IR_Distance.enable|block": "$this Tourne $enable",
  "IR_Distance.IR_Distance.getDistance|block": "$this obtenir la distance",
  "IR_Distance.IR_Distance.getValue|block": "$this obtenir la valeur",
  "IR_Distance.createIR_Distance|block": "$boardID $clickID",
  "IR_Distance_GP2Y0A.IR_Distance_GP2Y0A.getDistance|block": "$this obtenir la distance",
  "IR_Distance_GP2Y0A.IR_Distance_GP2Y0A.getValue|block": "$this obtenir la valeur",
  "IR_Distance_GP2Y0A.createIR_Distance_GP2Y0A|block": "$portID gamme $sensorType",
  "IR_Distance_GP2Y0A|block": "IR_Distance_GP2Y0A",
  "IR_Distance|block": "IR_Distance",

  "IR_Sense_3.IR_Sense.isHumanDetected|block": "$this humain détecté?",
  "IR_Sense_3.IR_Sense.onHumanDetected|block": "$this quand humain détecté",
  "IR_Sense_3.IR_Sense.readAK9754|block": "$this Lire l’enregistrement$register ?",
  "IR_Sense_3.IR_Sense.writeAK9754|block": "$this Écrire liste $values à AK9754 enregistrer $register ?",
  "IR_Sense_3.createIR_Sense|block": " $boardID $clickID",
  "IR_Sense_3|block": "IR_Sense_3",

  "IconNames.Angry|block": "faché",
  "IconNames.Asleep|block": "endormi",
  "IconNames.Butterfly|block": "papillon",
  "IconNames.Chessboard|block": "écheque",
  "IconNames.Confused|block": "confus",
  "IconNames.Cow|block": "vache",
  "IconNames.Diamond|block": "diamand",
  "IconNames.Duck|block": "canard",
  "IconNames.EigthNote|block": "eigth note",
  "IconNames.Fabulous|block": "fabuleux",
  "IconNames.Ghost|block": "fantôme",
  "IconNames.Giraffe|block": "giraffe",
  "IconNames.Happy|block": "content",
  "IconNames.Heart|block": "coeur",
  "IconNames.House|block": "maison",
  "IconNames.LeftTriangle|block": "triangle gauche",
  "IconNames.Meh|block": "meh",
  "IconNames.No|block": "non",
  "IconNames.Pitchfork|block": "fourche",
  "IconNames.QuarterNote|block": "quart de note",
  "IconNames.Rabbit|block": "lapin",
  "IconNames.Rollerskate|block": "patin roulette",
  "IconNames.Sad|block": "triste",
  "IconNames.Scissors|block": "ciseaux",
  "IconNames.Silly|block": "drôle",
  "IconNames.Skull|block": "skull",
  "IconNames.SmallDiamond|block": "petit diamand",
  "IconNames.SmallHeart|block": "petit coeur",
  "IconNames.SmallSquare|block": "petit carré",
  "IconNames.Snake|block": "serpent",
  "IconNames.Square|block": "carré",
  "IconNames.StickFigure|block": "stick figure",
  "IconNames.Surprised|block": "surpris",
  "IconNames.Sword|block": "épée",
  "IconNames.TShirt|block": "t-shirt",
  "IconNames.Target|block": "target",
  "IconNames.Tortoise|block": "tortoise",
  "IconNames.Triangle|block": "triangle",
  "IconNames.Umbrella|block": "parapluie",
  "IconNames.Yes|block": "oui",
  "Image.scrollImage|block": "scroll image %sprite(myImage)|with offset %frameoffset|and interval (ms) %delay",
  "Image.showImage|block": "show image %sprite(myImage)|at offset %offset",

  "IrThermo_3.IrThermo_3.getObjectTemp|block": "$this obtenir la température de la surface en $units",
  "IrThermo_3.TempUnits.C|block": "C",
  "IrThermo_3.TempUnits.F|block": "F",
  "IrThermo_3.createIrThermo|block": " $boardID $clickID",
  "IrThermo_3|block": "IrThermo_3",

  "JSON|block": "JSON",
  
  "Keylock.KeyPosition.one|block": "position 1",
  "Keylock.KeyPosition.three|block": "position 3",
  "Keylock.KeyPosition.two|block": "position 2",
  "Keylock.createkeylock|block": " $boardID $clickID",
  "Keylock.keylock.getLockPosition|block": "$this Obtenir la position de la serrure",
  "Keylock.keylock.onMotionDetected|block": "$this sur la serrure $position",
  "Keylock|block": "Serrure",

  "LCD_Mini.LCDSettings.lcd_clearDisplay|block": "Effacer l'écran $this LCD",
  "LCD_Mini.LCDSettings.lcd_writeString|block": "$this Écrire $LCDstring sur la ligne $lineNum",
  "LCD_Mini.createLCDSettings|block": " $boardID $clickID",
  "LCD_Mini.lineNumber.one|block": "1",
  "LCD_Mini.lineNumber.two|block": "2",
  "LCD_Mini|block": "LCD_Mini",

  "LedSpriteProperty.Blink|block": "clignote",
  "LedSpriteProperty.Brightness|block": "luminosité",
  "LedSpriteProperty.Direction|block": "direction",
  "LedSpriteProperty.X|block": "x",
  "LedSpriteProperty.Y|block": "y",

  "Line_Follower.LineFollower.getBlackDirection|block": "$this Correction requise pour suivre la ligne noire",
  "Line_Follower.LineFollower.getDirectionEnum|block": "$this $enumName",
  "Line_Follower.LineFollower.getWhiteDirection|block": "$this Correction requise pour suivre la ligne blanche",
  "Line_Follower.LineFollower.isReflected|block": "$this Est-ce que de la lumière a reflété sur $sensorNum",
  "Line_Follower.createLineFollower|block": " $boardID $clickID",
  "Line_Follower|block": "Suivre_Ligne",

  "Math.constrain|block": "contraindre la valeure %value|entre %low|et %high",
  "Math.map|block": "map %value|from low %fromLow|high %fromHigh|to low %toLow|high %toHigh",
  "Math.randomBoolean|block": "pick random true or false",
  "Math.randomRange|block": "pick random %min|to %limit",
  "Math|block": "Mathématiques",

  "Melodies.BaDing|block": "ba ding",
  "Melodies.Baddy|block": "baddy",
  "Melodies.Birthday|block": "bonne fête",
  "Melodies.Blues|block": "blues",
  "Melodies.Chase|block": "chase",
  "Melodies.Dadadadum|block": "dadadum",
  "Melodies.Entertainer|block": "entertainer",
  "Melodies.Funeral|block": "funérail",
  "Melodies.Funk|block": "funk",
  "Melodies.JumpDown|block": "saute en bas",
  "Melodies.JumpUp|block": "saute en haut",
  "Melodies.Nyan|block": "nyan",
  "Melodies.Ode|block": "ode",
  "Melodies.PowerDown|block": "power down",
  "Melodies.PowerUp|block": "power up",
  "Melodies.Prelude|block": "prelude",
  "Melodies.Punchline|block": "punchline",
  "Melodies.Ringtone|block": "ringtone",
  "Melodies.Wawawawaa|block": "wawawawaa",
  "Melodies.Wedding|block": "marriage",
  "MelodyOptions.ForeverInBackground|block": "toujours dans l'arrière plan",
  "MelodyOptions.Forever|block": "toujours",
  "MelodyOptions.OnceInBackground|block": "une fois dans l'arrière plan",
  "MelodyOptions.Once|block": "une fois",
  "MelodyStopOptions.All|block": "all",
  "MelodyStopOptions.Background|block": "background",
  "MelodyStopOptions.Foreground|block": "foreground",
  "MesDpadButtonInfo.ADown|block": "A down",
  "MesDpadButtonInfo.AUp|block": "A up",
  "MesDpadButtonInfo.BDown|block": "B down",
  "MesDpadButtonInfo.BUp|block": "B up",
  "MesDpadButtonInfo.CDown|block": "C down",
  "MesDpadButtonInfo.CUp|block": "C up",
  "MesDpadButtonInfo.DDown|block": "D down",
  "MesDpadButtonInfo.DUp|block": "D up",
  "MesDpadButtonInfo._1Down|block": "1 down",
  "MesDpadButtonInfo._1Up|block": "1 up",
  "MesDpadButtonInfo._2Down|block": "2 down",
  "MesDpadButtonInfo._2Up|block": "2 up",
  "MesDpadButtonInfo._3Down|block": "3 down",
  "MesDpadButtonInfo._3Up|block": "3 up",
  "MesDpadButtonInfo._4Down|block": "4 down",
  "MesDpadButtonInfo._4Up|block": "4 up",

  "Motion.Motion.isDetected|block": "$this Est-ce que du mouvement a été détecté?",
  "Motion.Motion.motionEnable|block": "$this $enable mouvement",
  "Motion.Motion.onMotionDetected|block": "$this quand mouvement détecté",
  "Motion.createMotion|block": "$boardID $clickID",
  "Motion|block": "Mouvement",

  "MusicEvent.BackgroundMelodyEnded|block": "background melody ended",
  "MusicEvent.BackgroundMelodyNotePlayed|block": "background melody note played",
  "MusicEvent.BackgroundMelodyPaused|block": "background melody paused",
  "MusicEvent.BackgroundMelodyRepeated|block": "background melody repeated",
  "MusicEvent.BackgroundMelodyResumed|block": "background melody resumed",
  "MusicEvent.BackgroundMelodyStarted|block": "background melody started",
  "MusicEvent.MelodyEnded|block": "mélodie finie",
  "MusicEvent.MelodyNotePlayed|block": "note de la mélodie jouée",
  "MusicEvent.MelodyRepeated|block": "mélodie répétée",
  "MusicEvent.MelodyStarted|block": "mélodie débutée",

  "NFC_Tag_2.NFC_Tag_2.readNT3H2111|block": "$this Lire $numBytes Byte de l’enregistrement$register",
  "NFC_Tag_2.NFC_Tag_2.setURI|block": "$this Écrire URL $URL sur l'appareil NFC",
  "NFC_Tag_2.NFC_Tag_2.writeBlock|block": "$this Écrire variété $values au bloc $blockAddr",
  "NFC_Tag_2.NFC_Tag_2.writeNT3H2111|block": "$this Écrire variétés $values au NT3H2111 register$register",  
  "NFC_Tag_2.URICode.four|block": "https://",
  "NFC_Tag_2.URICode.one|block": "http://www.",
  "NFC_Tag_2.URICode.three|block": "http://",
  "NFC_Tag_2.URICode.two|block": "https://www.",
  "NFC_Tag_2.URICode.zero|block": "FURL entier",
  "NFC_Tag_2.createNFC_Tag|block": " $boardID $clickID",
  "NFC_Tag_2|block": "NFC_Tag_2",
  
  "NO2.NO2.NO2_Read_Concentration|block": "Obtenir $this concentration NO2 en ppm (parties par million)",
  "NO2.createNO2Settings|block": " $boardID $clickID avec $sensitivity nA/ppm",
  "NO2|block": "NO2",

  "NeoPixelColors.Black|block": "noir",
  "NeoPixelColors.Blue|block": "bleu",
  "NeoPixelColors.Green|block": "vert",
  "NeoPixelColors.Indigo|block": "indigo",
  "NeoPixelColors.Orange|block": "orange",
  "NeoPixelColors.Purple|block": "magenta",
  "NeoPixelColors.Red|block": "rouge",
  "NeoPixelColors.Violet|block": "violet",
  "NeoPixelColors.White|block": "blanc",
  "NeoPixelColors.Yellow|block": "jaune",
  "NeoPixelMode.RGBW|block": "RGB+W",
  "NeoPixelMode.RGB_RGB|block": "RGB (format GRB)",
  "NeoPixelMode.RGB|block": "RGB (format RGB)",
  "neopixel.Strip.clear|block": "supprimer %strip",
  "neopixel.Strip.easeBrightness|block": "atténuer luminosité sur %strip",
  "neopixel.Strip.length|block": "longueur %strip",
  "neopixel.Strip.power|block": "alimentation (mA) %strip",
  "neopixel.Strip.range|block": "%strip| va de %start|plus %length|DELs",
  "neopixel.Strip.rotate|block": "pivoter DELs sur %strip| par %offset",
  "neopixel.Strip.setBrightness|block": "régler luminosité sur %strip| à %brightness",
  "neopixel.Strip.setMatrixColor|block": "régler couleur de matrice sur %strip|à x %x|y %y|sur %rgb=neopixel_colors",
  "neopixel.Strip.setMatrixWidth|block": "régler largeur de matrice sur %strip|à %width",
  "neopixel.Strip.setPixelColor|block": "régler couleur DELs sur %strip|à %pixeloffset|sur %rgb=neopixel_colors",
  "neopixel.Strip.setPixelWhiteLED|block": "régler DELs blanches sur %strip|à %pixeloffset|sur %white",
  "neopixel.Strip.shift|block": "décaler DELs sur %strip|de %offset",
  "neopixel.Strip.showBarGraph|block": "tracer graphe sur %strip|de %value|jusqu'à %high",
  "neopixel.Strip.showColor|block": "régler couleur sur %strip|sur %rgb=neopixel_colors",
  "neopixel.Strip.showRainbow|block": "afficher arc-en-ciel sur %strip|de %startHue|à %endHue",
  "neopixel.Strip.show|block": "montrer %strip|",
  "neopixel.colors|block": "%color",
  "neopixel.create|block": "NeoPixel sur broche %pin|avec %numleds|DELs en %mode",
  "neopixel.hsl|block": "teinte %h|saturation %s|luminosité %l",
  "neopixel.rgb|block": "R %red|G %green|B %blue",
  "neopixel|block": "neopixel",

  "Note.CSharp3|block": "C#3",
  "Note.CSharp4|block": "C#4",
  "Note.CSharp5|block": "C#5",
  "Note.CSharp|block": "C#",
  "Note.FSharp3|block": "F#3",
  "Note.FSharp4|block": "F#4",
  "Note.FSharp5|block": "F#5",
  "Note.FSharp|block": "F#",
  "Note.GSharp3|block": "G#3",
  "Note.GSharp4|block": "G#4",
  "Note.GSharp5|block": "G#5",
  "Note.GSharp|block": "G#",
  "Number|block": "Nombre",
  "ODCEnable.one|block": "Enable",
  "ODCEnable.zero|block": "Disable",
  "Object|block": "Objet",

  "PinEvent.Fall|block": "fall",
  "PinEvent.PulseHigh|block": "pulse high",
  "PinEvent.PulseLow|block": "pulse low",
  "PinEvent.Rise|block": "rise",
  "PinEventType.Edge|block": "edge",
  "PinEventType.None|block": "none",
  "PinEventType.Pulse|block": "pulse",
  "PinEventType.Touch|block": "touch",
  "PinPullMode.PullDown|block": "down",
  "PinPullMode.PullNone|block": "none",
  "PinPullMode.PullUp|block": "up",

  "Proximity_2.Proximity_2.proximity_2_Read_Als|block": "$this Obtenir niveau de lumière ambiante(lux)",
  "Proximity_2.Proximity_2.proximity_2_Read_Proximity|block": "$this Obtenir la valeur de la proximité",
  "Proximity_2.createProximity_2|block": " $boardID $clickID",
  "Proximity_2|block": "Proximity_2",

  "PulseValue.High|block": "élevé",
  "PulseValue.Low|block": "modique",

  "Reed.Reed.getSwitch|block": "$this aimant détecté",
  "Reed.Reed.onMagnetDetected|block": "$this quand aimant détecté",
  "Reed.createReed|block": " $boardID $clickID",
  "Reed|block": "Reed",

  "Relay.Relay.relayOnOff|block": "$this éteindre $onOff relai $relayNum",
  "Relay.createRelay|block": "$boardID $clickID",
  "Relay|block": "Relai",

  "Rotation.Pitch|block": "pitch",
  "Rotation.Roll|block": "roll",

  "Servo.Servo.readPCA9685|block": "$this lire l’enregistrement%register",
  "Servo.Servo.setServoAngle|block": "$this définir servo numéro %n à %angle degrés",
  "Servo.createServo|block": " $boardID $clickID",
  "Servo|block": "Servo",

  "SoundExpression.playUntilDone|block": "play sound $this until done",
  "SoundExpression.play|block": "play sound $this",
  "String.charAt|block": "char from %this=text|at %pos",
  "String.compare|block": "compare %this=text| to %that",
  "String.fromCharCode|block": "text from char code %code",
  "String.includes|block": "%this=text|includes %searchValue",
  "String.indexOf|block": "%this=text|find index of %searchValue",
  "String.isEmpty|block": "%this=text| is empty",
  "String.length|block": "length of %VALUE",
  "String.split|block": "split %this=text|at %separator",
  "String.substr|block": "substring of %this=text|from %start|of length %length",
  "String|block": "String",

  "Temp_Log_2.Temp_Log_2.readTemperatureC|block": "$this Obtenir la température en Celcius",
  "Temp_Log_2.Temp_Log_2.readTemperatureF|block": "$this Obtenir la température en Fahrenheit",
  "Temp_Log_2.createTemp_Log_2|block": " $boardID $clickID",
  "Temp_Log_2|block": "Temp_Log_2",

  "Thermo_6.TempUnits.C|block": "C",
  "Thermo_6.TempUnits.F|block": "F",
  "Thermo_6.Thermo_6.getTemp|block": "$this Obtenir la température en $units",
  "Thermo_6.Thermo_6.readMAX31875|block": "$this Lire l’enregistrement $register",
  "Thermo_6.Thermo_6.writeMAX31875|block": "$this Écrire $value à enregistrer $register",
  "Thermo_6.createThermo_6|block": " $boardID $clickID",
  "Thermo_6|block": "Thermo_6",

  "TouchButtonEvent.LongPressed|block": "long pressed",
  "TouchButtonEvent.Pressed|block": "pressed",
  "TouchButtonEvent.Released|block": "released",
  "TouchButtonEvent.Touched|block": "touched",
  "TouchTarget.LOGO|block": "logo",
  "TouchTarget.P0|block": "P0",
  "TouchTarget.P1|block": "P1",
  "TouchTarget.P2|block": "P2",
  "TouchTargetMode.Capacitive|block": "capacitive",
  "TouchTargetMode.Resistive|block": "resistive",

  "UV_3.UV_3.UVSteps|block": "$this Intensité UV",
  "UV_3.UV_3.disableShutdown|block": "$this Allumer l'appareil",
  "UV_3.UV_3.enableShutdown|block": "$this Éteindre l’appareil",
  "UV_3.UV_3.readVEML6070|block": "$this Lire de l’adresse $slaveAddress",
  "UV_3.UV_3.writeVEML6070|block": "$this Écrire $value à VEML6070 registre de contrôle",
  "UV_3.createUV_3|block": " $boardID $clickID",
  "UV_3|block": "UV_3",

  "Water_Detect.Water_Detect.isWater|block": "$this Est-ce que de l'eau a été détecté?",
  "Water_Detect.Water_Detect.onWaterDectect|block": "$this quand de l’eau est détectét",
  "Water_Detect.createWater_Detect|block": " $boardID $clickID",
  "Water_Detect.Water_Detect|block": "Détecter_Eau",

  "Weather.Weather.Dewpoint|block": "$this Point de rosée $u",
  "Weather.Weather.Power|block": "$this Courant $power",
  "Weather.Weather.humidity|block": "$this humidité",
  "Weather.Weather.pressure|block": "$this pression $u",
  "Weather.Weather.temperature|block": "$this température $u",
  "Weather.Weather_P.Pa|block": "Pa",
  "Weather.Weather_P.hPa|block": "hPa",
  "Weather.Weather_P.kPa|block": "kPa",
  "Weather.Weather_P.mmHg|block": "mmHg",
  "Weather.Weather_P.psi|block": "psi",
  "Weather.Weather_T.T_C|block": "C",
  "Weather.Weather_T.T_F|block": "F",
  "Weather.createWeather|block": " $boardID $clickID",
  "Weather|block": "Température",

  "_py|block": "_py",

  "bBoard_Control.I2CreadNoMem|block": "i2c lire $numBytes bytes à l’adresse i2c $address sur $boardID $clickID",
  "bBoard_Control.I2Cread|block": "i2c lire $numBytes bytes |à l’adresse enregistrée $memAddress |at i2c adresse $address sur $boardID $clickID",
  "bBoard_Control.PWMFrequency|block": "définir fréquence PWM sur broche $clickPin à $PWMfreq sur $boardID $clickID",
  "bBoard_Control.SPIModeSelect|block": "spi définir mode à $mode sur $boardID $clickID",
  "bBoard_Control.SPIWriteArray|block": "spi noter la liste $arrayValues sur $boardID $clickID",
  "bBoard_Control.SPIWriteBuffer|block": "spi écrire un message $bufferValues sur $boardID $clickID",
  "bBoard_Control.SPIWrite|block": "spi écrire $value sur $boardID $clickID",
  "bBoard_Control.SPIread|block": "spi lire $numBytes bytes sur $boardID $clickID",
  "bBoard_Control.UARTFrequency|block": "définir UART baud à $baud sur $boardID $clickID",
  "bBoard_Control.UARTSendBuffer|block": "envoyer un message $buff sur $boardID $clickID",
  "bBoard_Control.UARTSendString|block": "envoyer phrase $UARTString sur $boardID $clickID",
  "bBoard_Control.analogRead|block": "lire la broche analogue %clickPin sur $boardID $clickID",
  "bBoard_Control.digitalReadPin|block": "lire la briche digitale $clickPin sur $boardID $clickID",
  "bBoard_Control.getClickEventMask|block": "Get click event mask",
  "bBoard_Control.getFirmwareVersion|block": "Obtenir la version du firmware de $boardID sur l’espace $clickID on $boardID $clickID",
  "bBoard_Control.getInterruptSource|block": "Obtenir la source d'interruption sur $boardID $clickID",
  "bBoard_Control.getUARTData|block": "lire phrase sur $boardID $clickID",
  "bBoard_Control.i2cWriteNumber|block": "i2c écrire nombre $value|to i2c adresse $address|du format $format | répété $repeated sur $boardID $clickID",
  "bBoard_Control.isUARTDataAvailable|block": "les données UART sont disponibles sur $boardID $clickID?",
  "bBoard_Control.setDuty|block": "Définir le rapport cyclique sur la broche $clickPin à $duty sur $boardID $clickID",
  "bBoard_Control.setIODirection|block": "définir briche $clickPin à $direction sur $boardID $clickID",
  "bBoard_Control.setOpenDrain|block": "$ODC_Enable l’ouverture du drain sur $clickPin sur $boardID $clickID",
  "bBoard_Control.setPullDirection|block": "définir broche $clickPin à $pullDirection sur $boardID $clickID",
  "bBoard_Control.spiCS|block": "spi assigner Broche CS à broche $clickPin sur $boardID $clickID",
  "bBoard_Control.spiFrequency|block": "spi définir la fréquence $frequency sur $boardID $clickID",
  "bBoard_Control.writePin|block": "écrire broche $clickPin à $value sur $boardID $clickID",
  "bBoard_Control|block": "bBoard_Contrôle",
  "bBoard_Mic.clearThresholdFlag|block": "effacer le seuil",
  "bBoard_Mic.micBaseline|block": "mise à jour de la référence microphone",
  "bBoard_Mic.micEnable|block": "microphone $enable",
  "bBoard_Mic.micSoundLevel|block": "obtenir le niveau de bruit",
  "bBoard_Mic.micThresholdFlag|block": "le seuil a t-il été atteint?",
  "bBoard_Mic.onMicThresh|block": "allumé $soundLevel sound",
  "bBoard_Mic.setThresholdLevel|block": "définir le seuil du micro sur %threshold",
  "bBoard_Motor.motorEnable|block": "pilote de moteur %enable",
  "bBoard_Motor.motorLeftDuty|block": "réglez la vitesse du moteur gauche à$duty \\%",
  "bBoard_Motor.motorLeftTimed|block": "réglez la vitesse du moteur gauche à$duty \\% for$waitTime (ms)",
  "bBoard_Motor.motorRightDuty|block": "réglez la vitesse du moteur droit à$duty \\%",
  "bBoard_Motor.motorRightTimed|block": "réglez la vitesse du moteur droit à$duty \\% for$waitTime (ms)",
  "bBoard_Motor.motorTimed|block": "réglez la vitesse des deux moteurs sur$duty \\% for$waitTime (ms)",
  "bBoard_Motor|block": "bBoard_Moteur",
  "bBoard_Sound.playFrequency|block": "jouer les fréquences $frequencies Hz",
  "bBoard_Sound.setFrequenciesBPM|block": "régler le tempo des fréquences sur (bpm)%BPM",
  "bBoard_WiFi.WifiConnect|block": "connecter à ssid $ssid| avec mot de passe $pwd",
  "bBoard_WiFi.connectBLMQTT|block": "|BL MQTT connecter avec API clé%APIKey",
  "bBoard_WiFi.onBLMQTT|block": " sur nuage BL MQTT message reçu $receivedData du fil $feedName",
  "bBoard_WiFi.publishBLMQTT|block": "BL MQTT publier$data sur fil$feedName",
  "bBoard_WiFi.subscribeBLMQTT|block": "| BL MQTT s'abonner à fil $topic",
  "bBoard_WiFi|block": "bBoard_WiFi",  

  "basic.clearScreen|block": "nettoyer l'écran du micro:bit",
  "basic.forever|block": "toujours",
  "basic.pause|block": "pause (ms) %pause",
  "basic.showArrow|block": "montrer la flêche %i=device_arrow",
  "basic.showIcon|block": "montrer l'icône %i",
  "basic.showLeds|block": "montrer dels",
  "basic.showNumber|block": "montrer|chiffre %number",
  "basic.showString|block": "montrer|string %text",
  "basic|block": "base",
  
  "console|block": "console",
  "control.deviceName|block": "nom de l'appareil",
  "control.deviceSerialNumber|block": "device serial number",
  "control.eventSourceId|block": "%id",
  "control.eventTimestamp|block": "event timestamp",
  "control.eventValueId|block": "%id",
  "control.eventValue|block": "event value",
  "control.inBackground|block": "run in background",
  "control.millis|block": "millis (ms)",
  "control.onEvent|block": "on event|from %src=control_event_source_id|with value %value=control_event_value_id",
  "control.raiseEvent|block": "raise event|from source %src=control_event_source_id|with value %value=control_event_value_id",
  "control.reset|block": "reset",
  "control.waitForEvent|block": "wait for event|from %src|with value %value",
  "control.waitMicros|block": "attendre (µs)%micros",
  "control|block": "control",
  "convertToText|block": "convert $value=math_number to text",
  "game.LedSprite.change|block": "%sprite|change %property|by %value",
  "game.LedSprite.delete|block": "delete %this(sprite)",
  "game.LedSprite.get|block": "%sprite|%property",
  "game.LedSprite.ifOnEdgeBounce|block": "%sprite|if on edge, bounce",
  "game.LedSprite.isDeleted|block": "is %sprite|deleted",
  "game.LedSprite.isTouchingEdge|block": "is %sprite|touching edge",
  "game.LedSprite.isTouching|block": "is %sprite|touching %other",
  "game.LedSprite.move|block": "%sprite|move by %leds",
  "game.LedSprite.set|block": "%sprite|set %property|to %value",
  "game.LedSprite.turn|block": "%sprite|turn %direction|by (°) %degrees",
  "game.addLife|block": "add life %lives",
  "game.addScore|block": "change score by|%points",
  "game.createSprite|block": "create sprite at|x: %x|y: %y",
  "game.gameOver|block": "game over",
  "game.isGameOver|block": "is game over",
  "game.isPaused|block": "is paused",
  "game.isRunning|block": "is running",
  "game.pause|block": "pause",
  "game.removeLife|block": "remove life %life",
  "game.resume|block": "resume",
  "game.score|block": "score",
  "game.setLife|block": "set life %value",
  "game.setScore|block": "set score %points",
  "game.startCountdown|block": "start countdown|(ms) %duration",
  "game|block": "game",
  "images.arrowImage|block": "arrow image %i=device_arrow",
  "images.arrowNumber|block": "%arrow",
  "images.createBigImage|block": "créer une grosse image",
  "images.createImage|block": "créer une image",
  "images.iconImage|block": "icon image %i",
  "images|block": "images",
  "input.acceleration|block": "accélération (mg)|%NAME",
  "input.buttonIsPressed|block": "bouton|%NAME|est enfocé",
  "input.calibrateCompass|block": "calibrer la boussole",
  "input.compassHeading|block": "direction de la boussole (°)",
  "input.isGesture|block": "is %gesture gesture",
  "input.lightLevel|block": "niveau de luminosité",
  "input.logoIsPressed|block": "logo is pressed",
  "input.magneticForce|block": "force magnétique (µT)|%NAME",
  "input.onButtonPressed|block": "quand bouton|%NAME|est enfoncé",
  "input.onGesture|block": "sur |%NAME",
  "input.onLogoEvent|block": "on logo $action",
  "input.onPinPressed|block": "quand broche %name|est enfoncée",
  "input.onPinReleased|block": "quand broche %NAME| est relâchée ",
  "input.pinIsPressed|block": "broche %NAME| est enfoncée",
  "input.rotation|block": "rotation (°)|%NAME",
  "input.runningTimeMicros|block": "running time (micros)",
  "input.runningTime|block": "running time (ms)",
  "input.setAccelerometerRange|block": "set accelerometer|range %range",
  "input.temperature|block": "température (°C)",
  "input|block": "Entrée",

  "led.brightness|block": "brightness",
  "led.enable|block": "led enable %on",
  "led.plotBarGraph|block": "plot bar graph of %value up to %high",
  "led.plotBrightness|block": "plot|x %x|y %y|brightness %brightness",
  "led.plot|block": "plot|x %x|y %y",
  "led.pointBrightness|block": "point|x %x|y %y brightness",
  "led.point|block": "point|x %x|y %y",
  "led.setBrightness|block": "set brightness %value",
  "led.setDisplayMode|block": "set display mode $mode",
  "led.stopAnimation|block": "stop animation",
  "led.toggle|block": "toggle|x %x|y %y",
  "led.unplot|block": "unplot|x %x|y %y",
  "led|block": "del",
  "light|block": "light",
  "msgpack|block": "msgpack",
  "music.beat|block": "%fraction|beat",
  "music.beginMelody|block": "débuter la mélodie %melody=device_builtin_melody| répétant %options",
  "music.builtInMelody|block": "%melody",
  "music.changeTempoBy|block": "changer le tempo par (bpm)|%value",
  "music.melodyEditor|block": "$melody",
  "music.noteFrequency|block": "%name",
  "music.onEvent|block": "musique sur %value",
  "music.playMelody|block": "play melody $melody at tempo $tempo|(bpm)",
  "music.playTone|block": "jouer|tonalité %note=device_note|pour %duration=device_beat",
  "music.rest|block": "rest(ms)|%duration=device_beat",
  "music.ringTone|block": "ring tone (Hz)|%note=device_note",
  "music.setBuiltInSpeakerEnabled|block": "set built-in speaker $enabled",
  "music.setTempo|block": "défénir le tempo à (bpm)|%value",
  "music.setVolume|block": "set volume %volume",
  "music.startMelody|block": "start melody %melody=device_builtin_melody| repeating %options",
  "music.stopAllSounds|block": "stop all sounds",
  "music.stopMelody|block": "arrêter la mélodie $options",
  "music.tempo|block": "tempo (bpm)",
  "music.volume|block": "volume",
  "music|block": "musique",

  "parseFloat|block": "parse to number %text",
  "parseInt|block": "parse to integer %text",
  "pins.analogPitchVolume|block": "analog pitch volume",
  "pins.analogPitch|block": "analog pitch %frequency|for (ms) %ms",
  "pins.analogReadPin|block": "analog read|pin %name",
  "pins.analogSetPeriod|block": "analog set period|pin %pin|to (µs)%micros",
  "pins.analogSetPitchPin|block": "analog set pitch pin %name",
  "pins.analogSetPitchVolume|block": "analog set pitch volume $volume",
  "pins.analogWritePin|block": "analog write|pin %name|to %value",
  "pins.digitalReadPin|block": "digital read|pin %name",
  "pins.digitalWritePin|block": "digital write|pin %name|to %value",
  "pins.i2cReadNumber|block": "i2c read number|at address %address|of format %format|repeated %repeat",
  "pins.i2cWriteNumber|block": "i2c write number|at address %address|with value %value|of format %format|repeated %repeat",
  "pins.map|block": "map %value|from low %fromLow|from high %fromHigh|to low %toLow|to high %toHigh",
  "pins.onPulsed|block": "on|pin %pin|pulsed %pulse",
  "pins.pulseDuration|block": "pulse duration (µs)",
  "pins.pulseIn|block": "pulse in (µs)|pin %name|pulsed %value",
  "pins.servoSetPulse|block": "servo set pulse|pin %value|to (µs) %micros",
  "pins.servoWritePin|block": "servo write|pin %name|to %value",
  "pins.setAudioPin|block": "set audio pin $name",
  "pins.setEvents|block": "set pin %pin|to emit %type|events",
  "pins.setPull|block": "set pull|pin %pin|to %pull",
  "pins.spiFormat|block": "spi format|bits %bits|mode %mode",
  "pins.spiFrequency|block": "spi frequency %frequency",
  "pins.spiPins|block": "spi set pins|MOSI %mosi|MISO %miso|SCK %sck",
  "pins.spiWrite|block": "spi write %value",
  "pins.touchSetMode|block": "set %name to touch mode %mode",
  "pins|block": "Broches",
  "randint|block": "pick random %min|to %limit",
  "serial.delimiters|block": "%del",
  "serial.onDataReceived|block": "serial|on data received %delimiters=serial_delimiter_conv",
  "serial.readBuffer|block": "serial|read buffer %length",
  "serial.readLine|block": "serial|read line",
  "serial.readString|block": "serial|read string",
  "serial.readUntil|block": "serial|read until %delimiter=serial_delimiter_conv",
  "serial.redirectToUSB|block": "serial|redirect to USB",
  "serial.redirect|block": "serial|redirect to|TX %tx|RX %rx|at baud rate %rate",
  "serial.setBaudRate|block": "serial|set baud rate %rate",
  "serial.setRxBufferSize|block": "serial set rx buffer size to $size",
  "serial.setTxBufferSize|block": "serial set tx buffer size to $size",
  "serial.setWriteLinePadding|block": "serial set write line padding to $length",
  "serial.writeBuffer|block": "serial|write buffer %buffer=serial_readbuffer",
  "serial.writeLine|block": "serial|write line %text",
  "serial.writeNumbers|block": "serial|write numbers %values",
  "serial.writeNumber|block": "serial|write number %value",
  "serial.writeString|block": "serial|write string %text",
  "serial.writeValue|block": "serial|write value %name|= %value",
  "serial|block": "serial",
  "soundExpression.giggle|block": "{id:soundexpression}giggle",
  "soundExpression.happy|block": "{id:soundexpression}happy",
  "soundExpression.hello|block": "{id:soundexpression}hello",
  "soundExpression.mysterious|block": "{id:soundexpression}mysterious",
  "soundExpression.sad|block": "{id:soundexpression}sad",
  "soundExpression.slide|block": "{id:soundexpression}slide",
  "soundExpression.soaring|block": "{id:soundexpression}soaring",
  "soundExpression.spring|block": "{id:soundexpression}spring",
  "soundExpression.twinkle|block": "{id:soundexpression}twinkle",
  "soundExpression.yawn|block": "{id:soundexpression}yawn",
  
  "{id:category}Air_Quality_3": "Qualité_Air_3",
  "{id:category}AnalogInPin": "BrocheEntréeAnalogue",
  "{id:category}AnalogOutPin": "BrocheSortieAnalogue",
  "{id:category}Array": "Liste",
  "{id:category}Arrays": "Tableau",
  "{id:category}BBoard_Control": "BBoard_Contrôlel",
  "{id:category}BBoard_Mic": "BBoard_Micro",
  "{id:category}BBoard_Motor": "BBoard_Moteur",
  "{id:category}BBoard_Sound": "BBoard_Son",
  "{id:category}BBoard_WiFi": "BBoard_WiFi",
  "{id:category}BLiXel": "BLiXel",
  "{id:category}Basic": "Base",
  "{id:category}Boolean": "Boolean",
  "{id:category}Buffer": "Buffer",   
  "{id:category}Button_G": "Bouton_G",
  "{id:category}CO_2": "CO_2",
  "{id:category}Console": "Console",
  "{id:category}Control": "Contrôle",
  "{id:category}DigitalInOutPin": "BrocheDigitaleEntréeSortie",
  "{id:category}Force": "Force",
  "{id:category}Fx": "Fx",
  "{id:category}Fx8": "Fx8",
  "{id:category}Game": "Jeu",
  "{id:category}Helpers": "Indices",
  "{id:category}IR_Break_Beam": "IR_Break_Beam",
  "{id:category}IR_Distance": "IR_Distance",
  "{id:category}IR_Distance_GP2Y0A": "IR_Distance_GP2Y0A",
  "{id:category}IR_Sense_3": "IR_Sense_3",
  "{id:category}Image": "Image",
  "{id:category}Images": "Images",
  "{id:category}Input": "Entrée",
  "{id:category}IrThermo_3": "IrThermo_3",
  "{id:category}JSON": "JSON",
  "{id:category}K8": "K8",
  "{id:category}Keylock": "Serrure",
  "{id:category}LCD_Mini": "LCD_Mini",
  "{id:category}Led": "LED",
  "{id:category}Light": "Lumière",
  "{id:category}Line_Follower": "Suivre_Ligne",
  "{id:category}Math": "Mathématiques",
  "{id:category}MicrobitPin": "BrocheMicrobit",
  "{id:category}Motion": "Mouvement",
  "{id:category}Msgpack": "Msgpack",
  "{id:category}Music": "Musique",
  "{id:category}NFC_Tag_2": "NFC_Tag_2",
  "{id:category}NO2": "NO2",
  "{id:category}Neopixel": "Néopixel",
  "{id:category}Number": "Numéro",
  "{id:category}Object": "Objet",
  "{id:category}Pins": "Broches",
  "{id:category}Proximity_2": "Proximité_2",
  "{id:category}PwmOnlyPin": "PwmBrocheSeulement",
  "{id:category}Reed": "Reed",
  "{id:category}Relay": "Relai",
  "{id:category}Serial": "Série",
  "{id:category}Servo": "Servo",
  "{id:category}SoundExpression": "ExpressionSon",
  "{id:category}String": "Phrase",
  "{id:category}Text": "Texte",
  "{id:category}Thermo_6": "Thermo_6",
  "{id:category}UV_3": "UV_3",
  "{id:category}Touchpad": "Pavé tactile",
  "{id:category}Water_Detect": "Détecter_eau",
  "{id:category}Weather": "Température",
  "{id:category}WiFi_BLE": "WiFi_BLE",
  "{id:category}Ws2812b": "Ws2812b",
  "{id:group}Connect": "Connecter",
  "{id:group}Motion": "Mouvement",
  "{id:category}_py": "_py",
  "{id:group}Configuration": "Configuration",
  "{id:group}Dewpoint": "Point de Rosé",
  "{id:group}Humidity": "Humidité",
  "{id:group}I2C": "I2C",
  "{id:group}Initialize and Connect": "Initialiser et connecter",
  "{id:group}MQTT": "MQTT",
  "{id:group}Melody": "Mélodie",
  "{id:group}Melody Advanced": "Mélodie Advancée",
  "{id:group}Modify": "Modifier",
  "{id:group}Operations": "Opérations",
  "{id:group}PWM": "PWM",
  "{id:group}Pins": "Broches",
  "{id:group}Power": "Courant",
  "{id:group}Pressure": "Pression",
  "{id:group}Read": "Lire",
  "{id:group}SPI": "SPI",
  "{id:group}Temperature": "Température",
  "{id:group}Tempo": "Rythme",
  "{id:group}Tone": "Tonalité",
  "{id:group}UART": "UART",
  "{id:group}Volume": "Volume",
  "{id:group}_____________": "_____________",
  "{id:group}micro:bit (V2)": "micro:bit (V2)",
  "{id:subcategory}Brilliant Labs Cloud": "Nuage des Labos Créatifs"
}
